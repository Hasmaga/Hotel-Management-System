// <auto-generated />
using System;
using HMSBuinessObject.HMSDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HMSBuinessObject.Migrations
{
    [DbContext(typeof(HMSDBContexts))]
    [Migration("20240214182647_v1.0")]
    partial class v10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HMSBuinessObject.Model.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date")
                        .HasColumnName("Birthday");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<string>("IdentityCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IdentityCard");

                    b.Property<DateOnly>("LicenceDate")
                        .HasColumnType("date")
                        .HasColumnName("LicenceDate");

                    b.Property<string>("LicenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LicenceNumber");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mobile");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Customer", "dbo");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.BookingReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("ActualPrice")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("ActualPrice");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<Guid>("RoomInformationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoomInformationId");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RoomInformationId");

                    b.ToTable("BookingReservation", "dbo");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Comment");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CustomerId");

                    b.Property<decimal>("ReviewStar")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ReviewStar");

                    b.Property<Guid>("RoomInformationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoomInformationId");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("RoomInformationId");

                    b.ToTable("Review", "dbo");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("Authority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Authority");

                    b.HasKey("Id");

                    b.ToTable("Role", "dbo");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.RoomInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<decimal>("BookingPrice")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("BookingPrice");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("CreatedDate");

                    b.Property<int>("RoomCapacity")
                        .HasColumnType("int")
                        .HasColumnName("RoomCapacity");

                    b.Property<string>("RoomDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RoomDescription");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RoomName");

                    b.Property<Guid>("RoomTypeID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoomTypeID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeID");

                    b.ToTable("RoomInformation", "dbo");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("RoomDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RoomDescription");

                    b.Property<string>("RoomTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RoomTypeName");

                    b.HasKey("Id");

                    b.ToTable("RoomType", "dbo");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.Account", b =>
                {
                    b.HasOne("HMSBuinessObject.Model.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.BookingReservation", b =>
                {
                    b.HasOne("HMSBuinessObject.Model.Account", "Customer")
                        .WithMany("BookingReservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMSBuinessObject.Model.RoomInformation", "RoomInformation")
                        .WithMany("BookingReservations")
                        .HasForeignKey("RoomInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("RoomInformation");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.Review", b =>
                {
                    b.HasOne("HMSBuinessObject.Model.Account", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HMSBuinessObject.Model.RoomInformation", "RoomInformation")
                        .WithMany("Reviews")
                        .HasForeignKey("RoomInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("RoomInformation");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.RoomInformation", b =>
                {
                    b.HasOne("HMSBuinessObject.Model.RoomType", "RoomType")
                        .WithMany("RoomInformations")
                        .HasForeignKey("RoomTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.Account", b =>
                {
                    b.Navigation("BookingReservations");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.RoomInformation", b =>
                {
                    b.Navigation("BookingReservations");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("HMSBuinessObject.Model.RoomType", b =>
                {
                    b.Navigation("RoomInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
